@charset "UTF-8";@font-face{font-family:Bellota;font-display:swap;src:url(../font/Bellota-Regular.woff2) format("woff2"),url(../font/Bellota-Regular.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:Bellota;font-display:swap;src:url(../font/Bellota-Bold.woff2) format("woff2"),url(../font/Bellota-Bold.woff) format("woff");font-weight:700;font-style:normal}@font-face{font-family:Marck;font-display:swap;src:url(../font/MarckScript-Regular.woff2) format("woff2"),url(../font/MarckScript-Regular.woff) format("woff");font-weight:700;font-style:normal}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{height:100%;min-width:320px}body{color:#222;line-height:1;font-family:"Bellota";font-size:1.125rem;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}button,input,textarea{font-family:"Bellota";font-size:inherit}button{cursor:pointer;background-color:inherit}a,button{color:inherit}a:hover,a:link,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}.lock body{overflow:hidden;-ms-touch-action:none;touch-action:none}.wrapper{min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;overflow:hidden}.wrapper>main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.wrapper>*{min-width:0}[class*=__container]{max-width:73.125rem;-webkit-box-sizing:content-box;box-sizing:content-box;margin:0 auto;padding:0 .9375rem}[class*=-ibg]{position:relative}[class*=-ibg] img{position:absolute;width:100%;height:100%;top:0;left:0;-o-object-fit:cover;object-fit:cover}[class*=-ibg_contain] img{-o-object-fit:contain;object-fit:contain}.ibg{background-position:center;background-size:cover;background-repeat:no-repeat}.header{position:fixed;width:100%;z-index:50;height:50px;line-height:50px}.header::before{background-color:#fff;z-index:3}.header-label,.ibg img{display:none}.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;z-index:3}.menu__list li{margin:0 25px}.menu__link{font-weight:700}.menu-icon{display:none}.page{position:relative}.main-screen{height:100vh;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0 20px;text-align:center;overflow:auto}.main-screen__content{position:relative;z-index:2}.main-screen__image{position:absolute;top:0;left:0;height:100%;width:100%}.header::before,.main-screen__image::after,.main-screen__image::before{content:"";position:absolute;top:0;left:0;width:100%;height:100%}.main-screen__image::before{background:url(../img/main-screen/decor1.svg) 0 0/451px 282px;opacity:.2}.main-screen__image::after{background-color:rgba(92,60,0,.5058823529)}.content-main-screen{padding-top:50px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff}.content-main-screen__label{font-weight:700;font-size:25px}.content-main-screen__title{margin-top:15px;font-family:marck;font-size:50px}.content-main-screen__line{margin:35px auto 0;width:100px;height:3px;background-color:#ffa600}.content-main-screen__descr{margin:150px 0 0;max-width:650px;font-size:22px;line-height:26px;letter-spacing:.4px}@supports (-webkit-appearance:none){.main-screen__image::before{background:url(../img/main-screen/decor1.svg) 0 0/451px 282px}}@media (max-width:560px){.content-main-screen__descr{margin:100px 0 0}}@media (max-width:47.99875em){.header-label{display:block;position:absolute;line-height:50px;top:0;left:15px;z-index:3;font-family:Marck;font-size:24px}.menu{opacity:0;visibility:hidden}.menu.active{position:fixed;top:0;left:0;width:100%;height:100vh;background-color:#ffa600;opacity:1;visibility:visible;overflow:auto;-webkit-transition:visibility 1.2s ease 0s,opacity 1.2s ease 0s;-o-transition:visibility 1.2s ease 0s,opacity 1.2s ease 0s;transition:visibility 1.2s ease 0s,opacity 1.2s ease 0s}.menu.active .menu__list{margin:60px 0 0;display:block;text-align:center}.menu.active .menu__list li{margin:20px 0;line-height:40px}.menu.active .menu__link{color:#fff;font-size:20px;text-transform:uppercase}.menu-icon{z-index:3;display:block;position:absolute;top:12.5px;right:10px;width:30px;height:20px}.menu-icon.active span{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0)}.menu-icon.active::before{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);top:9px}.menu-icon.active::after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);bottom:9px}.menu-icon span,.menu-icon::after,.menu-icon::before{background-color:#000;position:absolute;width:100%;height:2px;left:0;-webkit-transition:all .3s ease 0s;-o-transition:all .3s ease 0s;transition:all .3s ease 0s}.menu-icon span{top:9px}.menu-icon::after,.menu-icon::before{content:""}.menu-icon::before{top:0}.menu-icon::after{bottom:0}.main-screen{padding:10px}.content-main-screen__label{font-size:20px}.content-main-screen__title{font-size:40px}.content-main-screen__line{margin:15px 0 0}.content-main-screen__descr{font-size:18px}}@media (max-width:29.99875em){.content-main-screen__descr{margin:50px 0 0}}@media (max-height:400px){.content-main-screen__label{font-size:18px}.content-main-screen__title{margin-top:10px;font-size:35px}.content-main-screen__line{display:none}.content-main-screen__descr{font-size:18px}}@media (max-height:600px){.content-main-screen__descr{margin:40px 0 0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */